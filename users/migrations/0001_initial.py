# Generated by Django 3.2.9 on 2022-02-07 10:15

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import users.models
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('home', '0001_initial'),
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('email', models.EmailField(max_length=50, unique=True, verbose_name='Email Address')),
                ('name', models.CharField(max_length=50, verbose_name='Full Name')),
                ('is_staff', models.BooleanField(default=False)),
                ('is_mod', models.BooleanField(default=False, help_text='Is this a Moderator Account?', verbose_name='Moderator')),
                ('is_superuser', models.BooleanField(default=False, help_text='Is this an Administrator Account?', verbose_name='Admin')),
                ('is_active', models.BooleanField(default=True, help_text='All users are ACTIVE by default. Turn this OFF to SUSPEND the user. Suspended users can not Login in the system.', verbose_name='Active User')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now)),
                ('last_login', models.DateTimeField(auto_now=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
            ],
            options={
                'verbose_name': '   User Management',
                'verbose_name_plural': '   User Management',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='UserType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('type', models.CharField(choices=[('ADMIN', 'Admin'), ('MODERATOR', 'Moderator'), ('TRAINER', 'Trainer'), ('TRAINEE', 'Trainee'), ('OBSERVER', 'Observer')], max_length=15)),
            ],
            options={
                'verbose_name': 'User Type',
                'verbose_name_plural': 'User Types',
            },
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='Last Name')),
                ('image', models.ImageField(blank=True, help_text='Upload an Image(Flyer). Should be less than 5MB', upload_to=users.models.user_directory_path, validators=[users.models.validate_file_size], verbose_name='Image')),
                ('gender', models.CharField(blank=True, choices=[('MALE', 'Male'), ('FEMALE', 'Female'), ('OTHER', 'Other')], max_length=50, verbose_name='Gender')),
                ('dob', models.DateField(blank=True, null=True, verbose_name='Date-Of-Birth')),
                ('pob', models.DateField(blank=True, max_length=30, null=True, verbose_name='Place-Of-Birth')),
                ('org_ins', models.CharField(blank=True, max_length=50, verbose_name='Organisation/Institute')),
                ('dept_name', models.CharField(blank=True, max_length=30, verbose_name='Department Name')),
                ('dept_id', models.CharField(blank=True, max_length=20, verbose_name='Department Id')),
                ('ofc_add', models.CharField(blank=True, max_length=100, verbose_name='Office Address')),
                ('ofc_number', models.CharField(blank=True, max_length=20, verbose_name='Office Contact Number')),
                ('nationality', models.TextField(blank=True, max_length=100, verbose_name='Nationality')),
                ('fax', models.CharField(blank=True, max_length=30, verbose_name='FAX Number')),
                ('secondary_email', models.EmailField(blank=True, max_length=254, verbose_name='Secondary Email Address')),
                ('school', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='home.school')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': ' Trainer/Trainee/Observer Profile',
                'verbose_name_plural': ' Trainer/Trainee/Observer Profiles',
                'ordering': ['-id'],
            },
        ),
        migrations.CreateModel(
            name='ModeratorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='First Name')),
                ('last_name', models.CharField(blank=True, max_length=30, verbose_name='Last Name')),
                ('designation', models.CharField(blank=True, max_length=50, verbose_name='Designation')),
                ('unit', models.CharField(blank=True, max_length=30, verbose_name='Unit')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '  Moderator Profile',
                'verbose_name_plural': '  Moderator Profiles',
            },
        ),
        migrations.CreateModel(
            name='Employment',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('emp1', models.CharField(max_length=200, verbose_name='Name of Employer')),
                ('place1', models.CharField(max_length=50, verbose_name='Place')),
                ('title1', models.CharField(max_length=50, verbose_name='Title or Position')),
                ('desc1', models.TextField(max_length=200, verbose_name='Description')),
                ('from1', models.DateField(verbose_name='From')),
                ('to1', models.DateField(verbose_name='To')),
                ('emp2', models.CharField(max_length=200, verbose_name='Name of Employer')),
                ('place2', models.CharField(max_length=50, verbose_name='Place')),
                ('title2', models.CharField(max_length=50, verbose_name='Title or Position')),
                ('desc2', models.TextField(max_length=200, verbose_name='Description')),
                ('from2', models.DateField(verbose_name='From')),
                ('to2', models.DateField(verbose_name='To')),
                ('emp3', models.CharField(max_length=200, verbose_name='Name of Employer')),
                ('place3', models.CharField(max_length=50, verbose_name='Place')),
                ('title3', models.CharField(max_length=50, verbose_name='Title or Position')),
                ('desc3', models.TextField(max_length=200, verbose_name='Description')),
                ('from3', models.DateField(verbose_name='From')),
                ('to3', models.DateField(verbose_name='to')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='employments', to='users.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Education',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('ins1', models.CharField(max_length=200, verbose_name='Name and Place of Institute')),
                ('study_f1', models.CharField(max_length=50, verbose_name='Field of Study')),
                ('degree1', models.CharField(max_length=70, verbose_name='Diploma or Degree')),
                ('from1', models.DateField(verbose_name='From')),
                ('to1', models.DateField(verbose_name='To')),
                ('ins2', models.CharField(max_length=200, verbose_name='Name and Place of Institute')),
                ('study_f2', models.CharField(max_length=50, verbose_name='Field of Study')),
                ('degree2', models.CharField(max_length=70, verbose_name='Diploma or Degree')),
                ('from2', models.DateField(verbose_name='From')),
                ('to2', models.DateField(verbose_name='To')),
                ('ins3', models.CharField(max_length=200, verbose_name='Name and Place of Institute')),
                ('study_f3', models.CharField(max_length=50, verbose_name='Field of Study')),
                ('degree3', models.CharField(max_length=70, verbose_name='Diploma or Degree')),
                ('from3', models.DateField(verbose_name='From')),
                ('to3', models.DateField(verbose_name='To')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='educations', to='users.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Document',
            fields=[
                ('unique_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False, unique=True)),
                ('created_at', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('sig_1', models.ImageField(help_text='Upload a photo with your Signature. Should be less than 5MB', upload_to=users.models.user_directory_path, validators=[users.models.validate_file_size], verbose_name='Signature Image')),
                ('pass_1', models.ImageField(blank=True, help_text='Upload an Image of the front page of your Passport. Should be less than 5MB', upload_to=users.models.user_directory_path, validators=[users.models.validate_file_size], verbose_name='Passport Front Image')),
                ('pass_2', models.ImageField(blank=True, help_text='Upload an Image of the Last page of your Passport. Should be less than 5MB', upload_to=users.models.user_directory_path, validators=[users.models.validate_file_size], verbose_name='Passport Back Image')),
                ('visa_1', models.ImageField(blank=True, help_text='Upload an Image of the Visa. Should be less than 5MB', upload_to=users.models.user_directory_path, validators=[users.models.validate_file_size], verbose_name='Visa Image 1')),
                ('visa_2', models.ImageField(blank=True, help_text='Upload another Image of the Visa. Should be less than 5MB', upload_to=users.models.user_directory_path, validators=[users.models.validate_file_size], verbose_name='Visa Image 2')),
                ('approval_1', models.ImageField(blank=True, help_text='Upload another Image of the Visa. Should be less than 5MB', upload_to=users.models.user_directory_path, validators=[users.models.validate_file_size], verbose_name='Approval 2')),
                ('approval_2', models.ImageField(blank=True, help_text='Upload another Image of the Visa. Should be less than 5MB', upload_to=users.models.user_directory_path, validators=[users.models.validate_file_size], verbose_name='Approval 2')),
                ('audio_video', models.FileField(blank=True, help_text='Upload Images/Audio/Video Files', upload_to=users.models.user_directory_path, validators=[users.models.validate_file_size], verbose_name='Audio/Video')),
                ('created_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='documents', to='users.userprofile')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='customuser',
            name='types',
            field=models.ManyToManyField(to='users.UserType'),
        ),
        migrations.AddField(
            model_name='customuser',
            name='user_permissions',
            field=models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions'),
        ),
    ]
